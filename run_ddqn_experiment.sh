#!/bin/bash
# DDQN Index Selection Quick Start Script
# PostgreSQLÊ∑±Â∫¶Âº∫ÂåñÂ≠¶‰π†Á¥¢ÂºïÈÄâÊã©Âø´ÈÄüÂêØÂä®ËÑöÊú¨

set -e  # Exit on error

# È¢úËâ≤ËæìÂá∫
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}DDQN Index Selection for PostgreSQL${NC}"
echo -e "${BLUE}========================================${NC}\n"

# Ê£ÄÊü•ËôöÊãüÁéØÂ¢É
if [ ! -d "/home/qihan/.venv" ]; then
    echo -e "${RED}‚ùå Virtual environment not found!${NC}"
    exit 1
fi

# ÊøÄÊ¥ªËôöÊãüÁéØÂ¢É
echo -e "${GREEN}‚úì${NC} Activating virtual environment..."
source /home/qihan/.venv/bin/activate

# ËøõÂÖ•È°πÁõÆÁõÆÂΩï
cd /home/qihan/DBABandits

# Ê£ÄÊü•GPU
echo -e "\n${YELLOW}üìä Checking GPU availability...${NC}"
if command -v nvidia-smi &> /dev/null; then
    nvidia-smi --query-gpu=name,memory.total,memory.free --format=csv,noheader
    echo -e "${GREEN}‚úì${NC} GPU detected! DDQN will use GPU acceleration."
else
    echo -e "${YELLOW}‚ö†${NC}  No GPU detected. DDQN will run on CPU (slower)."
fi

# Ê£ÄÊü•TensorFlow GPUÊîØÊåÅ
echo -e "\n${YELLOW}üîç Checking TensorFlow GPU support...${NC}"
python -c "import tensorflow as tf; gpus = tf.config.list_physical_devices('GPU'); print('GPU available:', len(gpus) > 0); [print(f'  - {gpu.name}') for gpu in gpus]" 2>/dev/null || echo "TensorFlow check skipped"

# ÊòæÁ§∫ÂÆûÈ™åÈÖçÁΩÆ
echo -e "\n${YELLOW}‚öôÔ∏è  Experiment Configuration:${NC}"
echo "  - Experiment ID: job_benchmark_ddqn"
echo "  - Algorithm: DDQN (Deep Q-Network)"
echo "  - Database: PostgreSQL (IMDB)"
echo "  - Workload: JOB Benchmark"
echo ""

# ËØ¢ÈóÆÁî®Êà∑
read -p "$(echo -e ${YELLOW}Do you want to start the experiment? [y/N]: ${NC})" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${RED}Experiment cancelled.${NC}"
    exit 0
fi

# ËøêË°åÂÆûÈ™å
echo -e "\n${GREEN}üöÄ Starting DDQN experiment...${NC}\n"
echo -e "${BLUE}========================================${NC}"

# ËÆæÁΩÆÊó•ÂøóÊñá‰ª∂
LOG_DIR="experiments/job_benchmark_ddqn"
mkdir -p "$LOG_DIR"

# ËøêË°åÂÆûÈ™åÂπ∂ÂÆûÊó∂ÊòæÁ§∫ËæìÂá∫
python -m simulation.sim_run_ddqn_experiment 2>&1 | tee "${LOG_DIR}/run_$(date +%Y%m%d_%H%M%S).log"

EXITCODE=${PIPESTATUS[0]}

echo -e "\n${BLUE}========================================${NC}"

if [ $EXITCODE -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Experiment completed successfully!${NC}\n"
    echo -e "${YELLOW}üìÅ Results location:${NC}"
    echo "   - Logs: ${LOG_DIR}/"
    echo "   - Plots: ${LOG_DIR}/*.png"
    echo "   - Data: ${LOG_DIR}/reports.pickle"
    echo ""
    echo -e "${YELLOW}üìä View results:${NC}"
    echo "   tail -100 ${LOG_DIR}/job_benchmark_ddqn.log"
else
    echo -e "${RED}‚ùå Experiment failed with exit code $EXITCODE${NC}"
    echo -e "${YELLOW}Check logs at: ${LOG_DIR}/${NC}"
    exit $EXITCODE
fi
